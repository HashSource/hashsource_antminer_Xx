//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
//

#include <stdbool.h>
#include <stdint.h>

// ------------------- Function Prototypes --------------------

int32_t __ctype_b_loc(void);
int32_t __errno_location(void);
int32_t __libc_start_main(void);
int32_t __rawmemchr(void);
int32_t abort(void);
int32_t close(void);
int32_t connect(void);
int32_t entry_point(int32_t i_a1, int32_t i_a2);
int32_t fprintf(void);
int32_t function_8620(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4);
int32_t function_86ac(void);
int32_t function_8748(int32_t i_a1, int32_t i_a2);
int32_t function_88f4(void);
int32_t function_8918(int32_t i_a1, int32_t i_a2, int32_t i_a3, char i_a4);
int32_t function_8950(int32_t * p_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4);
int32_t function_8990(void);
int32_t function_89b8(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4);
int32_t function_89ec(int32_t i_a1);
int32_t function_8a64(int32_t i_a1);
int32_t function_8ba8(int32_t i_a1, int32_t i_a2, int32_t i_a3);
int32_t function_8de8(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4);
int32_t function_8e4c(void);
int32_t function_8e50(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4);
int32_t gethostbyname(void);
int32_t malloc(void);
int32_t printf(void);
int32_t puts(void);
int32_t realloc(void);
int32_t recv(void);
int32_t send(void);
int32_t socket(void);
int32_t strchr(void);
int32_t strcmp(void);
int32_t strerror(void);
int32_t strlen(void);
int32_t strtol(void);

// --------------------- Global Variables ---------------------

int32_t i_g1 = 0; // 0x11008
int32_t i_g2 = 0; // 0x11158
char * p_g3; // 0x1116c
int32_t i_g4 = 0; // 0x11170
int32_t i_g5 = 11; // 0x81f0
int32_t i_g6 = 0; // 0x81fc
int32_t i_g7 = -0x1e4f9eba; // 0x8e10

// ------------------------ Functions -------------------------

// Address range: 0x8620 - 0x862c
int32_t function_8620(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4) {
    // 0x8620
    return function_88f4();
}

// Address range: 0x8640 - 0x864c
int32_t strcmp(void) {
    // 0x8640
    int32_t i_v1; // 0x8640
    return i_v1;
}

// Address range: 0x864c - 0x8658
int32_t strtol(void) {
    // 0x864c
    int32_t i_v1; // 0x864c
    return i_v1;
}

// Address range: 0x8658 - 0x8664
int32_t printf(void) {
    // 0x8658
    int32_t i_v1; // 0x8658
    return i_v1;
}

// Address range: 0x8664 - 0x8670
int32_t realloc(void) {
    // 0x8664
    int32_t i_v1; // 0x8664
    return i_v1;
}

// Address range: 0x8670 - 0x867c
int32_t __rawmemchr(void) {
    // 0x8670
    int32_t i_v1; // 0x8670
    return i_v1;
}

// Address range: 0x867c - 0x8688
int32_t puts(void) {
    // 0x867c
    int32_t i_v1; // 0x867c
    return i_v1;
}

// Address range: 0x8688 - 0x8694
int32_t malloc(void) {
    // 0x8688
    int32_t i_v1; // 0x8688
    return i_v1;
}

// Address range: 0x8694 - 0x86a0
int32_t __libc_start_main(void) {
    // 0x8694
    int32_t i_v1; // 0x8694
    return i_v1;
}

// Address range: 0x86a0 - 0x86ac
int32_t strerror(void) {
    // 0x86a0
    int32_t i_v1; // 0x86a0
    return i_v1;
}

// Address range: 0x86ac - 0x86b8
int32_t function_86ac(void) {
    // 0x86ac
    int32_t i_v1; // 0x86ac
    return i_v1;
}

// Address range: 0x86b8 - 0x86c4
int32_t __ctype_b_loc(void) {
    // 0x86b8
    int32_t i_v1; // 0x86b8
    return i_v1;
}

// Address range: 0x86c4 - 0x86d0
int32_t strlen(void) {
    // 0x86c4
    int32_t i_v1; // 0x86c4
    return i_v1;
}

// Address range: 0x86d0 - 0x86dc
int32_t strchr(void) {
    // 0x86d0
    int32_t i_v1; // 0x86d0
    return i_v1;
}

// Address range: 0x86dc - 0x86e8
int32_t fprintf(void) {
    // 0x86dc
    int32_t i_v1; // 0x86dc
    return i_v1;
}

// Address range: 0x86e8 - 0x86f4
int32_t __errno_location(void) {
    // 0x86e8
    int32_t i_v1; // 0x86e8
    return i_v1;
}

// Address range: 0x86f4 - 0x8700
int32_t socket(void) {
    // 0x86f4
    int32_t i_v1; // 0x86f4
    return i_v1;
}

// Address range: 0x8700 - 0x870c
int32_t gethostbyname(void) {
    // 0x8700
    int32_t i_v1; // 0x8700
    return i_v1;
}

// Address range: 0x870c - 0x8718
int32_t abort(void) {
    // 0x870c
    int32_t i_v1; // 0x870c
    return i_v1;
}

// Address range: 0x8718 - 0x8724
int32_t recv(void) {
    // 0x8718
    int32_t i_v1; // 0x8718
    return i_v1;
}

// Address range: 0x8724 - 0x8730
int32_t close(void) {
    // 0x8724
    int32_t i_v1; // 0x8724
    return i_v1;
}

// Address range: 0x8730 - 0x873c
int32_t send(void) {
    // 0x8730
    int32_t i_v1; // 0x8730
    return i_v1;
}

// Address range: 0x873c - 0x8748
int32_t connect(void) {
    // 0x873c
    int32_t i_v1; // 0x873c
    return i_v1;
}

// Address range: 0x8748 - 0x88a0
int32_t function_8748(int32_t i_a1, int32_t i_a2) {
    int32_t i_v1 = 4028; // 0x8758
    int32_t i_v2 = (int32_t)"summary"; // 0x8758
    int32_t i_v3 = (int32_t)"127.0.0.1"; // 0x8758
    int32_t i_v4; // 0x8748
    if (i_a1 < 2) {
        return function_8ba8(i_v2, i_v3, __asm_sxth(i_v1));
    } else {
        int32_t i_v5 = *(int32_t *)(i_a2 + 4); // 0x875c
        if (*(char *)i_v5 == 45) {
            char i_v6 = *(char *)(i_v5 + 1); // 0x87f0
            switch (i_v6) {
                case 104: {
                }
                case 63: {
                    // 0x87fc
                    if (*(char *)(i_v5 + 2) == 0) {
                        // 0x8808
                        fprintf();
                        return 1;
                    }
                    // break -> 0x882c
                    break;
                }
            }
            // 0x882c
            if (strcmp() == 0) {
                // 0x8808
                fprintf();
                return 1;
            }
            // 0x8840
            i_v4 = 1;
            if (i_v6 == 111) {
                // 0x8848
                i_v4 = 1;
                if (*(char *)(i_v5 + 2) == 0) {
                    // 0x8854
                    i_g4 = 1;
                    i_v4 = 2;
                    i_v1 = 4028;
                    i_v2 = (int32_t)"summary";
                    i_v3 = (int32_t)"127.0.0.1";
                    if (i_a1 == 2) {
                        return function_8ba8(i_v2, i_v3, __asm_sxth(i_v1));
                    } else {
                        goto lab_0x8784;
                    }
                } else {
                    goto lab_0x8784;
                }
            } else {
                goto lab_0x8784;
            }
        } else {
            // 0x876c
            i_v4 = 1;
            if (strcmp() == 0) {
                // 0x8808
                fprintf();
                return 1;
            }
            goto lab_0x8784;
        }
    }
    // 0x8878
    return function_8ba8(i_v2, i_v3, __asm_sxth(i_v1));
  lab_0x8784:;
    int32_t i_v7 = i_v4 + 1; // 0x8788
    int32_t i_v8 = function_89ec(*(int32_t *)(4 * i_v4 + i_a2)); // 0x878c
    int32_t i_v9 = *(char *)i_v8 == 0 ? (int32_t)"summary" : i_v8;
    i_v1 = 4028;
    i_v2 = i_v9;
    i_v3 = (int32_t)"127.0.0.1";
    if (i_v7 < i_a1) {
        int32_t i_v10 = i_v4 + 2; // 0x87b0
        int32_t i_v11 = function_89ec(*(int32_t *)(4 * i_v7 + i_a2)); // 0x87b4
        int32_t i_v12 = *(char *)i_v11 == 0 ? (int32_t)"127.0.0.1" : i_v11;
        i_v1 = 4028;
        i_v2 = i_v9;
        i_v3 = i_v12;
        if (i_v10 < i_a1) {
            int32_t i_v13 = function_89ec(*(int32_t *)(4 * i_v10 + i_a2)); // 0x87d8
            i_v1 = 4028;
            i_v2 = i_v9;
            i_v3 = i_v12;
            if (*(char *)i_v13 != 0) {
                // 0x888c
                i_v1 = strtol() % 0x10000;
                i_v2 = i_v9;
                i_v3 = i_v12;
            }
        }
    }
    return function_8ba8(i_v2, i_v3, __asm_sxth(i_v1));
}

// Address range: 0x88b8 - 0x88e8
int32_t entry_point(int32_t i_a1, int32_t i_a2) {
    // 0x88b8
    __libc_start_main();
    return abort();
}

// Address range: 0x88f4 - 0x8910
int32_t function_88f4(void) {
    // 0x88f4
    if (i_g2 == 0) {
        int32_t i_v1; // 0x88f4
        return i_v1;
    }
    // 0x890c
    return function_86ac();
}

// Address range: 0x8918 - 0x8944
int32_t function_8918(int32_t i_a1, int32_t i_a2, int32_t i_a3, char i_a4) {
    // 0x8918
    return 0x11164;
}

// Address range: 0x8950 - 0x8984
int32_t function_8950(int32_t * p_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4) {
    // 0x8950
    return 0x11164;
}

// Address range: 0x8990 - 0x89b4
int32_t function_8990(void) {
    // 0x8990
    int32_t i_v1; // 0x8990
    if (*(char *)&p_g3 != 0) {
        return i_v1;
    }
    int32_t i_v2 = function_8918(i_v1, i_v1, i_v1, 0); // 0x89a4
    *(char *)&p_g3 = 1;
    return i_v2;
}

// Address range: 0x89b8 - 0x89e4
int32_t function_89b8(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4) {
    // 0x89b8
    return function_8950(&i_g1, i_a2, i_a3, i_a4);
}

// Address range: 0x89ec - 0x8a64
int32_t function_89ec(int32_t i_a1) {
    int32_t * p_v1 = (int32_t *)__ctype_b_loc(); // 0x89fc
    uint32_t i_v2 = i_a1;
    int16_t i_v3 = *(int16_t *)(2 * (int32_t)*(char *)i_v2 + *p_v1); // 0x8a14
    int32_t i_v4 = i_v2 + 1; // 0x8a24
    while ((i_v3 & 0x2000) != 0) {
        // 0x8a04
        i_v2 = i_v4;
        i_v3 = *(int16_t *)(2 * (int32_t)*(char *)i_v2 + *p_v1);
        i_v4 = i_v2 + 1;
    }
    int32_t i_v5 = __rawmemchr(); // 0x8a30
    if (i_v5 >= i_v2 != i_v5 != i_v2) {
        // 0x8a5c
        return i_v2;
    }
    int32_t i_v6 = i_v5; // 0x8a58
    i_v6--;
    char * p_v7 = (char *)i_v6; // 0x8a38
    if ((*(int16_t *)(2 * (int32_t)*p_v7 + *p_v1) & 0x2000) != 0) {
        *p_v7 = 0;
    }
    while (i_v6 >= i_v2 == (i_v6 != i_v2)) {
        // 0x8a38
        i_v6--;
        p_v7 = (char *)i_v6;
        if ((*(int16_t *)(2 * (int32_t)*p_v7 + *p_v1) & 0x2000) != 0) {
            *p_v7 = 0;
        }
    }
    // 0x8a5c
    return i_v2;
}

// Address range: 0x8a64 - 0x8b94
int32_t function_8a64(int32_t i_a1) {
    // 0x8a64
    if (i_a1 == 0) {
        // 0x8b7c
        return 0;
    }
    int32_t i_v1 = strchr(); // 0x8a78
    int32_t i_v2 = 0; // 0x8a84
    if (i_v1 != 0) {
        *(char *)i_v1 = 0;
        i_v2 = i_v1 + 1;
    }
    int32_t i_v3 = i_v1; // 0x8a90
    int32_t i_v4; // 0x8a64
    int32_t i_v5; // 0x8a64
    int32_t i_v6; // 0x8a64
    int32_t i_v7; // 0x8a64
    int32_t i_v8; // 0x8aac
    int32_t i_v9; // 0x8ad0
    int32_t i_v10; // 0x8ae8
    if (*(char *)i_a1 != 0) {
        while (true) {
            // 0x8aa4
            i_v7 = 0;
            i_v8 = strchr();
            i_v4 = 0;
            if (i_v8 != 0) {
                *(char *)i_v8 = 0;
                i_v4 = i_v8 + 1;
            }
            if (*(char *)i_a1 == 0) {
                goto lab_0x8b3c;
            } else {
                // 0x8ac8
                i_v9 = strchr();
                if (i_v9 == 0) {
                    // 0x8b80
                    i_v5 = 0;
                    if (i_v7 == 0) {
                        goto lab_0x8b18;
                    } else {
                        // 0x8b60
                        printf();
                        goto lab_0x8b3c;
                    }
                } else {
                    // 0x8adc
                    *(char *)i_v9 = 0;
                    i_v10 = i_v9 + 1;
                    i_v6 = i_v10;
                    if (i_v7 == 0) {
                        // 0x8af0
                        i_v5 = 0;
                        if (i_v10 != 0) {
                            // 0x8af8
                            __ctype_b_loc();
                            i_v5 = i_v10;
                        }
                        goto lab_0x8b18;
                    } else {
                        goto lab_0x8b24;
                    }
                }
            }
        }
        // 0x8b48
        i_v3 = puts();
    }
    // 0x8b50
    int32_t i_v11; // 0x8a64
    while (i_v2 != 0) {
        int32_t i_v12 = i_v2;
        i_v1 = strchr();
        i_v2 = 0;
        if (i_v1 != 0) {
            *(char *)i_v1 = 0;
            i_v2 = i_v1 + 1;
        }
        i_v11 = i_v12;
        if (*(char *)i_v12 != 0) {
            while (true) {
                // 0x8aa4
                i_v7 = 0;
                i_v8 = strchr();
                i_v4 = 0;
                if (i_v8 != 0) {
                    *(char *)i_v8 = 0;
                    i_v4 = i_v8 + 1;
                }
                if (*(char *)i_v11 == 0) {
                    goto lab_0x8b3c;
                } else {
                    // 0x8ac8
                    i_v9 = strchr();
                    if (i_v9 == 0) {
                        // 0x8b80
                        i_v5 = 0;
                        if (i_v7 == 0) {
                            goto lab_0x8b18;
                        } else {
                            // 0x8b60
                            printf();
                            goto lab_0x8b3c;
                        }
                    } else {
                        // 0x8adc
                        *(char *)i_v9 = 0;
                        i_v10 = i_v9 + 1;
                        i_v6 = i_v10;
                        if (i_v7 == 0) {
                            // 0x8af0
                            i_v5 = 0;
                            if (i_v10 != 0) {
                                // 0x8af8
                                __ctype_b_loc();
                                i_v5 = i_v10;
                            }
                            goto lab_0x8b18;
                        } else {
                            goto lab_0x8b24;
                        }
                    }
                }
            }
            // 0x8b48
            i_v3 = puts();
        }
    }
    // 0x8b7c
    return i_v3;
  lab_0x8b3c:
    // 0x8b3c
    i_v11 = i_v4;
    if (i_v4 == 0) {
        // break -> 0x8b48
        goto lab_0x8b48;
    }
    goto lab_0x8aa4;
  lab_0x8b18:
    // 0x8b18
    printf();
    i_v6 = i_v5;
    goto lab_0x8b24;
  lab_0x8b24:
    // 0x8b24
    if (i_v6 == 0) {
        // 0x8b60
        printf();
        goto lab_0x8b3c;
    } else {
        // 0x8b2c
        printf();
        goto lab_0x8b3c;
    }
}

// Address range: 0x8ba8 - 0x8dc8
int32_t function_8ba8(int32_t i_a1, int32_t i_a2, int32_t i_a3) {
    // 0x8ba8
    if (gethostbyname() == 0) {
        // 0x8da0
        printf();
        // 0x8cf4
        return 1;
    }
    // 0x8bcc
    if (socket() == -1) {
        // 0x8d40
        __errno_location();
        strerror();
        printf();
        // 0x8cf4
        return 1;
    }
    // 0x8be8
    __asm_ubfx(i_a3, 8, 8);
    if (connect() < 0) {
        // 0x8d80
        __errno_location();
        strerror();
        printf();
        // 0x8cf4
        return 1;
    }
    // 0x8c34
    strlen();
    if (send() < 0) {
        // 0x8cd0
        __errno_location();
        strerror();
        printf();
        // 0x8cec
        close();
        // 0x8cf4
        return 1;
    }
    int32_t i_v1 = malloc(); // 0x8c5c
    int32_t i_v2 = 0; // 0x8c68
    int32_t i_v3 = 0xffff; // 0x8c68
    int32_t i_v4 = i_v1; // 0x8c68
    if (i_v1 == 0) {
        // 0x8db4
        printf();
      lab_0x8cf4:
        // 0x8cf4
        return 1;
    }
    int32_t i_v5; // 0x8ba8
    int32_t i_v6; // 0x8ba8
    int32_t i_v7; // 0x8ba8
    while (true) {
        // 0x8c6c
        i_v7 = i_v4;
        i_v5 = i_v2;
        int32_t i_v8 = recv(); // 0x8c80
        if (i_v8 < 0) {
            // break (via goto) -> 0x8d00
            goto lab_0x8d00;
        }
        // 0x8c90
        i_v6 = 0;
        if (i_v8 == 0) {
            goto lab_0x8d1c;
        }
        int32_t i_v9 = i_v8 + i_v5; // 0x8c88
        while (i_v3 != i_v9) {
            // 0x8c6c
            i_v5 = i_v9;
            i_v8 = recv();
            if (i_v8 < 0) {
                // break (via goto) -> 0x8d00
                goto lab_0x8d00;
            }
            // 0x8c90
            i_v6 = 0;
            if (i_v8 == 0) {
                goto lab_0x8d1c;
            }
            // 0x8c94
            i_v9 = i_v8 + i_v5;
        }
        // 0x8c9c
        i_v4 = realloc();
        i_v2 = i_v3;
        i_v3 += 0xffff;
        if (i_v4 == 0) {
            // 0x8cbc
            printf();
            return 1;
        }
    }
  lab_0x8d00:
    // 0x8d00
    __errno_location();
    strerror();
    printf();
    i_v6 = 1;
  lab_0x8d1c:
    // 0x8d1c
    *(char *)(i_v5 + i_v7) = 0;
    if (i_g4 != 0) {
        // 0x8d34
        puts();
        // 0x8cec
        close();
        // 0x8cf4
        return i_v6;
    }
    // 0x8d60
    printf();
    function_8a64(i_v7);
    // 0x8cec
    close();
    // 0x8cf4
    return i_v6;
}

// Address range: 0x8de8 - 0x8e44
int32_t function_8de8(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4) {
    int32_t i_v1 = function_8620(i_a1, i_a2, i_a3, i_a4); // 0x8e04
    int32_t i_v2 = (int32_t)&i_g6 + 0x8e08 - ((int32_t)&i_g7 + (int32_t)&i_g5) >> 2 == 0 ? i_v1 : i_a1;
    return i_v2;
}

// Address range: 0x8e4c - 0x8e50
int32_t function_8e4c(void) {
    // 0x8e4c
    int32_t i_v1; // 0x8e4c
    return i_v1;
}

// Address range: 0x8e50 - 0x8e58
int32_t function_8e50(int32_t i_a1, int32_t i_a2, int32_t i_a3, int32_t i_a4) {
    // 0x8e50
    return i_a1;
}

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: gcc (4.8.x)
// Detected functions: 36

